Terminals unused in grammar

   T_LIBRARY
   T_IN
   T_BY
   T_LENGTHOUT
   T_COPEN
   T_SEQOPEN
   '<'
   '>'
   '='


Grammar

    0 $accept: Q $end

    1 Q: S

    2 S: WHILE S
    3  | IF S
    4  | REPEAT S
    5  | BREAK S
    6  | EXP S
    7  | T_PRINT '(' ITEM ')' T_NL S
    8  | T_CO N S T_CC T_NL S
    9  | error T_NL S
   10  | %empty

   11 WHILE: T_WHILE N '(' N COND N ')' N T_CO N S T_CC T_NL

   12 REPEAT: T_REPEAT N T_CO N S T_CC T_NL

   13 BREAK: T_BREAK T_NL

   14 IF: T_IF N '(' N COND N ')' N T_CO NIF

   15 NIF: N S T_CC T_NL
   16    | N S T_CC T_NL E

   17 E: T_ELSE N T_IF N '(' N COND N ')' N T_CO N S T_CC T_NL E

   18 @1: %empty

   19 E: T_ELSE N T_CO N S T_CC T_NL @1

   20 EXP: K RELOP K T_NL
   21    | ID ASSIGNOP K T_NL
   22    | K T_NL

   23 COND: K RELOP K
   24     | ID ASSIGNOP K
   25     | K LOGICOP K
   26     | K

   27 K: K T_ADD L
   28  | K T_SUB L
   29  | L

   30 L: L T_MUL M
   31  | L T_DIV M
   32  | M

   33 M: M T_MOD O
   34  | M T_MMOD O
   35  | O

   36 O: ID
   37  | NUM
   38  | '(' K ')'
   39  | ID '[' INDEX ']'

   40 INDEX: NUM ',' INDEX
   41      | ID ',' INDEX
   42      | NUM
   43      | ID

   44 RELOP: T_LT
   45      | T_GT
   46      | T_EE
   47      | T_LE
   48      | T_GE
   49      | T_NE

   50 ASSIGNOP: T_EQ
   51         | T_LA
   52         | T_RA

   53 LOGICOP: T_AND
   54        | T_OR

   55 ITEM: NUM
   56     | BOOL
   57     | STR
   58     | PASTE
   59     | ID

   60 PASTE: T_PASTEO '(' PASTEIN ')'

   61 PASTEIN: STR ',' PASTEIN
   62        | ID ',' PASTEIN
   63        | %empty

   64 N: T_NL
   65  | %empty

   66 NUM: T_NUM

   67 BOOL: T_TRUE
   68     | T_FALSE

   69 STR: T_STR

   70 ID: T_ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 11 14 17 38 60
')' (41) 7 11 14 17 38 60
',' (44) 40 41 61 62
'<' (60)
'=' (61)
'>' (62)
'[' (91) 39
']' (93) 39
error (256) 9
T_LIBRARY (258)
T_NL (259) 7 8 9 11 12 13 15 16 17 19 20 21 22 64
T_PRINT (260) 7
T_WHILE (261) 11
T_IF (262) 14 17
T_IN (263)
T_ELSE (264) 17 19
T_BREAK (265) 13
T_REPEAT (266) 12
T_BY (267)
T_LENGTHOUT (268)
T_PASTEO (269) 60
T_TRUE (270) 67
T_FALSE (271) 68
T_MOD (272) 33
T_MMOD (273) 34
T_NUM (274) 66
T_STR (275) 69
T_ID (276) 70
T_COPEN (277)
T_SEQOPEN (278)
T_CO (279) 8 11 12 14 17 19
T_CC (280) 8 11 12 15 16 17 19
T_ADD (281) 27
T_SUB (282) 28
T_MUL (283) 30
T_DIV (284) 31
T_GT (285) 45
T_LT (286) 44
T_EQ (287) 50
T_AND (288) 53
T_OR (289) 54
T_LE (290) 47
T_GE (291) 48
T_EE (292) 46
T_NE (293) 49
T_RA (294) 52
T_LA (295) 51


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Q (50)
    on left: 1, on right: 0
S (51)
    on left: 2 3 4 5 6 7 8 9 10, on right: 1 2 3 4 5 6 7 8 9 11 12
    15 16 17 19
WHILE (52)
    on left: 11, on right: 2
REPEAT (53)
    on left: 12, on right: 4
BREAK (54)
    on left: 13, on right: 5
IF (55)
    on left: 14, on right: 3
NIF (56)
    on left: 15 16, on right: 14
E (57)
    on left: 17 19, on right: 16 17
@1 (58)
    on left: 18, on right: 19
EXP (59)
    on left: 20 21 22, on right: 6
COND (60)
    on left: 23 24 25 26, on right: 11 14 17
K (61)
    on left: 27 28 29, on right: 20 21 22 23 24 25 26 27 28 38
L (62)
    on left: 30 31 32, on right: 27 28 29 30 31
M (63)
    on left: 33 34 35, on right: 30 31 32 33 34
O (64)
    on left: 36 37 38 39, on right: 33 34 35
INDEX (65)
    on left: 40 41 42 43, on right: 39 40 41
RELOP (66)
    on left: 44 45 46 47 48 49, on right: 20 23
ASSIGNOP (67)
    on left: 50 51 52, on right: 21 24
LOGICOP (68)
    on left: 53 54, on right: 25
ITEM (69)
    on left: 55 56 57 58 59, on right: 7
PASTE (70)
    on left: 60, on right: 58
PASTEIN (71)
    on left: 61 62 63, on right: 60 61 62
N (72)
    on left: 64 65, on right: 8 11 12 14 15 16 17 19
NUM (73)
    on left: 66, on right: 37 40 42 55
BOOL (74)
    on left: 67 68, on right: 56
STR (75)
    on left: 69, on right: 57 61
ID (76)
    on left: 70, on right: 21 24 36 39 41 43 59 62


State 0

    0 $accept: . Q $end

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)

    Q       go to state 11
    S       go to state 12
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 1

    9 S: error . T_NL S

    T_NL  shift, and go to state 24


State 2

    7 S: T_PRINT . '(' ITEM ')' T_NL S

    '('  shift, and go to state 25


State 3

   11 WHILE: T_WHILE . N '(' N COND N ')' N T_CO N S T_CC T_NL

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 27


State 4

   14 IF: T_IF . N '(' N COND N ')' N T_CO NIF

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 28


State 5

   13 BREAK: T_BREAK . T_NL

    T_NL  shift, and go to state 29


State 6

   12 REPEAT: T_REPEAT . N T_CO N S T_CC T_NL

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 30


State 7

   66 NUM: T_NUM .

    $default  reduce using rule 66 (NUM)


State 8

   70 ID: T_ID .

    $default  reduce using rule 70 (ID)


State 9

    8 S: T_CO . N S T_CC T_NL S

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 31


State 10

   38 O: '(' . K ')'

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    K    go to state 32
    L    go to state 19
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 11

    0 $accept: Q . $end

    $end  shift, and go to state 34


State 12

    1 Q: S .

    $default  reduce using rule 1 (Q)


State 13

    2 S: WHILE . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 35
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 14

    4 S: REPEAT . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 36
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 15

    5 S: BREAK . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 37
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 16

    3 S: IF . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 38
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 17

    6 S: EXP . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 39
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 18

   20 EXP: K . RELOP K T_NL
   22    | K . T_NL
   27 K: K . T_ADD L
   28  | K . T_SUB L

    T_NL   shift, and go to state 40
    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42
    T_GT   shift, and go to state 43
    T_LT   shift, and go to state 44
    T_LE   shift, and go to state 45
    T_GE   shift, and go to state 46
    T_EE   shift, and go to state 47
    T_NE   shift, and go to state 48

    RELOP  go to state 49


State 19

   29 K: L .
   30 L: L . T_MUL M
   31  | L . T_DIV M

    T_MUL  shift, and go to state 50
    T_DIV  shift, and go to state 51

    $default  reduce using rule 29 (K)


State 20

   32 L: M .
   33 M: M . T_MOD O
   34  | M . T_MMOD O

    T_MOD   shift, and go to state 52
    T_MMOD  shift, and go to state 53

    $default  reduce using rule 32 (L)


State 21

   35 M: O .

    $default  reduce using rule 35 (M)


State 22

   37 O: NUM .

    $default  reduce using rule 37 (O)


State 23

   21 EXP: ID . ASSIGNOP K T_NL
   36 O: ID .
   39  | ID . '[' INDEX ']'

    T_EQ  shift, and go to state 54
    T_RA  shift, and go to state 55
    T_LA  shift, and go to state 56
    '['   shift, and go to state 57

    $default  reduce using rule 36 (O)

    ASSIGNOP  go to state 58


State 24

    9 S: error T_NL . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 59
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 25

    7 S: T_PRINT '(' . ITEM ')' T_NL S

    T_PASTEO  shift, and go to state 60
    T_TRUE    shift, and go to state 61
    T_FALSE   shift, and go to state 62
    T_NUM     shift, and go to state 7
    T_STR     shift, and go to state 63
    T_ID      shift, and go to state 8

    ITEM   go to state 64
    PASTE  go to state 65
    NUM    go to state 66
    BOOL   go to state 67
    STR    go to state 68
    ID     go to state 69


State 26

   64 N: T_NL .

    $default  reduce using rule 64 (N)


State 27

   11 WHILE: T_WHILE N . '(' N COND N ')' N T_CO N S T_CC T_NL

    '('  shift, and go to state 70


State 28

   14 IF: T_IF N . '(' N COND N ')' N T_CO NIF

    '('  shift, and go to state 71


State 29

   13 BREAK: T_BREAK T_NL .

    $default  reduce using rule 13 (BREAK)


State 30

   12 REPEAT: T_REPEAT N . T_CO N S T_CC T_NL

    T_CO  shift, and go to state 72


State 31

    8 S: T_CO N . S T_CC T_NL S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    T_CC  reduce using rule 10 (S)

    S       go to state 73
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 32

   27 K: K . T_ADD L
   28  | K . T_SUB L
   38 O: '(' K . ')'

    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42
    ')'    shift, and go to state 74


State 33

   36 O: ID .
   39  | ID . '[' INDEX ']'

    '['  shift, and go to state 57

    $default  reduce using rule 36 (O)


State 34

    0 $accept: Q $end .

    $default  accept


State 35

    2 S: WHILE S .

    $default  reduce using rule 2 (S)


State 36

    4 S: REPEAT S .

    $default  reduce using rule 4 (S)


State 37

    5 S: BREAK S .

    $default  reduce using rule 5 (S)


State 38

    3 S: IF S .

    $default  reduce using rule 3 (S)


State 39

    6 S: EXP S .

    $default  reduce using rule 6 (S)


State 40

   22 EXP: K T_NL .

    $default  reduce using rule 22 (EXP)


State 41

   27 K: K T_ADD . L

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    L    go to state 75
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 42

   28 K: K T_SUB . L

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    L    go to state 76
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 43

   45 RELOP: T_GT .

    $default  reduce using rule 45 (RELOP)


State 44

   44 RELOP: T_LT .

    $default  reduce using rule 44 (RELOP)


State 45

   47 RELOP: T_LE .

    $default  reduce using rule 47 (RELOP)


State 46

   48 RELOP: T_GE .

    $default  reduce using rule 48 (RELOP)


State 47

   46 RELOP: T_EE .

    $default  reduce using rule 46 (RELOP)


State 48

   49 RELOP: T_NE .

    $default  reduce using rule 49 (RELOP)


State 49

   20 EXP: K RELOP . K T_NL

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    K    go to state 77
    L    go to state 19
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 50

   30 L: L T_MUL . M

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    M    go to state 78
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 51

   31 L: L T_DIV . M

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    M    go to state 79
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 52

   33 M: M T_MOD . O

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    O    go to state 80
    NUM  go to state 22
    ID   go to state 33


State 53

   34 M: M T_MMOD . O

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    O    go to state 81
    NUM  go to state 22
    ID   go to state 33


State 54

   50 ASSIGNOP: T_EQ .

    $default  reduce using rule 50 (ASSIGNOP)


State 55

   52 ASSIGNOP: T_RA .

    $default  reduce using rule 52 (ASSIGNOP)


State 56

   51 ASSIGNOP: T_LA .

    $default  reduce using rule 51 (ASSIGNOP)


State 57

   39 O: ID '[' . INDEX ']'

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8

    INDEX  go to state 82
    NUM    go to state 83
    ID     go to state 84


State 58

   21 EXP: ID ASSIGNOP . K T_NL

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    K    go to state 85
    L    go to state 19
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 59

    9 S: error T_NL S .

    $default  reduce using rule 9 (S)


State 60

   60 PASTE: T_PASTEO . '(' PASTEIN ')'

    '('  shift, and go to state 86


State 61

   67 BOOL: T_TRUE .

    $default  reduce using rule 67 (BOOL)


State 62

   68 BOOL: T_FALSE .

    $default  reduce using rule 68 (BOOL)


State 63

   69 STR: T_STR .

    $default  reduce using rule 69 (STR)


State 64

    7 S: T_PRINT '(' ITEM . ')' T_NL S

    ')'  shift, and go to state 87


State 65

   58 ITEM: PASTE .

    $default  reduce using rule 58 (ITEM)


State 66

   55 ITEM: NUM .

    $default  reduce using rule 55 (ITEM)


State 67

   56 ITEM: BOOL .

    $default  reduce using rule 56 (ITEM)


State 68

   57 ITEM: STR .

    $default  reduce using rule 57 (ITEM)


State 69

   59 ITEM: ID .

    $default  reduce using rule 59 (ITEM)


State 70

   11 WHILE: T_WHILE N '(' . N COND N ')' N T_CO N S T_CC T_NL

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 88


State 71

   14 IF: T_IF N '(' . N COND N ')' N T_CO NIF

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 89


State 72

   12 REPEAT: T_REPEAT N T_CO . N S T_CC T_NL

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 90


State 73

    8 S: T_CO N S . T_CC T_NL S

    T_CC  shift, and go to state 91


State 74

   38 O: '(' K ')' .

    $default  reduce using rule 38 (O)


State 75

   27 K: K T_ADD L .
   30 L: L . T_MUL M
   31  | L . T_DIV M

    T_MUL  shift, and go to state 50
    T_DIV  shift, and go to state 51

    $default  reduce using rule 27 (K)


State 76

   28 K: K T_SUB L .
   30 L: L . T_MUL M
   31  | L . T_DIV M

    T_MUL  shift, and go to state 50
    T_DIV  shift, and go to state 51

    $default  reduce using rule 28 (K)


State 77

   20 EXP: K RELOP K . T_NL
   27 K: K . T_ADD L
   28  | K . T_SUB L

    T_NL   shift, and go to state 92
    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42


State 78

   30 L: L T_MUL M .
   33 M: M . T_MOD O
   34  | M . T_MMOD O

    T_MOD   shift, and go to state 52
    T_MMOD  shift, and go to state 53

    $default  reduce using rule 30 (L)


State 79

   31 L: L T_DIV M .
   33 M: M . T_MOD O
   34  | M . T_MMOD O

    T_MOD   shift, and go to state 52
    T_MMOD  shift, and go to state 53

    $default  reduce using rule 31 (L)


State 80

   33 M: M T_MOD O .

    $default  reduce using rule 33 (M)


State 81

   34 M: M T_MMOD O .

    $default  reduce using rule 34 (M)


State 82

   39 O: ID '[' INDEX . ']'

    ']'  shift, and go to state 93


State 83

   40 INDEX: NUM . ',' INDEX
   42      | NUM .

    ','  shift, and go to state 94

    $default  reduce using rule 42 (INDEX)


State 84

   41 INDEX: ID . ',' INDEX
   43      | ID .

    ','  shift, and go to state 95

    $default  reduce using rule 43 (INDEX)


State 85

   21 EXP: ID ASSIGNOP K . T_NL
   27 K: K . T_ADD L
   28  | K . T_SUB L

    T_NL   shift, and go to state 96
    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42


State 86

   60 PASTE: T_PASTEO '(' . PASTEIN ')'

    T_STR  shift, and go to state 63
    T_ID   shift, and go to state 8

    $default  reduce using rule 63 (PASTEIN)

    PASTEIN  go to state 97
    STR      go to state 98
    ID       go to state 99


State 87

    7 S: T_PRINT '(' ITEM ')' . T_NL S

    T_NL  shift, and go to state 100


State 88

   11 WHILE: T_WHILE N '(' N . COND N ')' N T_CO N S T_CC T_NL

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    COND  go to state 101
    K     go to state 102
    L     go to state 19
    M     go to state 20
    O     go to state 21
    NUM   go to state 22
    ID    go to state 103


State 89

   14 IF: T_IF N '(' N . COND N ')' N T_CO NIF

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    COND  go to state 104
    K     go to state 102
    L     go to state 19
    M     go to state 20
    O     go to state 21
    NUM   go to state 22
    ID    go to state 103


State 90

   12 REPEAT: T_REPEAT N T_CO N . S T_CC T_NL

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    T_CC  reduce using rule 10 (S)

    S       go to state 105
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 91

    8 S: T_CO N S T_CC . T_NL S

    T_NL  shift, and go to state 106


State 92

   20 EXP: K RELOP K T_NL .

    $default  reduce using rule 20 (EXP)


State 93

   39 O: ID '[' INDEX ']' .

    $default  reduce using rule 39 (O)


State 94

   40 INDEX: NUM ',' . INDEX

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8

    INDEX  go to state 107
    NUM    go to state 83
    ID     go to state 84


State 95

   41 INDEX: ID ',' . INDEX

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8

    INDEX  go to state 108
    NUM    go to state 83
    ID     go to state 84


State 96

   21 EXP: ID ASSIGNOP K T_NL .

    $default  reduce using rule 21 (EXP)


State 97

   60 PASTE: T_PASTEO '(' PASTEIN . ')'

    ')'  shift, and go to state 109


State 98

   61 PASTEIN: STR . ',' PASTEIN

    ','  shift, and go to state 110


State 99

   62 PASTEIN: ID . ',' PASTEIN

    ','  shift, and go to state 111


State 100

    7 S: T_PRINT '(' ITEM ')' T_NL . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 112
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 101

   11 WHILE: T_WHILE N '(' N COND . N ')' N T_CO N S T_CC T_NL

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 113


State 102

   23 COND: K . RELOP K
   25     | K . LOGICOP K
   26     | K .
   27 K: K . T_ADD L
   28  | K . T_SUB L

    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42
    T_GT   shift, and go to state 43
    T_LT   shift, and go to state 44
    T_AND  shift, and go to state 114
    T_OR   shift, and go to state 115
    T_LE   shift, and go to state 45
    T_GE   shift, and go to state 46
    T_EE   shift, and go to state 47
    T_NE   shift, and go to state 48

    $default  reduce using rule 26 (COND)

    RELOP    go to state 116
    LOGICOP  go to state 117


State 103

   24 COND: ID . ASSIGNOP K
   36 O: ID .
   39  | ID . '[' INDEX ']'

    T_EQ  shift, and go to state 54
    T_RA  shift, and go to state 55
    T_LA  shift, and go to state 56
    '['   shift, and go to state 57

    $default  reduce using rule 36 (O)

    ASSIGNOP  go to state 118


State 104

   14 IF: T_IF N '(' N COND . N ')' N T_CO NIF

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 119


State 105

   12 REPEAT: T_REPEAT N T_CO N S . T_CC T_NL

    T_CC  shift, and go to state 120


State 106

    8 S: T_CO N S T_CC T_NL . S

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    $end  reduce using rule 10 (S)
    T_CC  reduce using rule 10 (S)

    S       go to state 121
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 107

   40 INDEX: NUM ',' INDEX .

    $default  reduce using rule 40 (INDEX)


State 108

   41 INDEX: ID ',' INDEX .

    $default  reduce using rule 41 (INDEX)


State 109

   60 PASTE: T_PASTEO '(' PASTEIN ')' .

    $default  reduce using rule 60 (PASTE)


State 110

   61 PASTEIN: STR ',' . PASTEIN

    T_STR  shift, and go to state 63
    T_ID   shift, and go to state 8

    $default  reduce using rule 63 (PASTEIN)

    PASTEIN  go to state 122
    STR      go to state 98
    ID       go to state 99


State 111

   62 PASTEIN: ID ',' . PASTEIN

    T_STR  shift, and go to state 63
    T_ID   shift, and go to state 8

    $default  reduce using rule 63 (PASTEIN)

    PASTEIN  go to state 123
    STR      go to state 98
    ID       go to state 99


State 112

    7 S: T_PRINT '(' ITEM ')' T_NL S .

    $default  reduce using rule 7 (S)


State 113

   11 WHILE: T_WHILE N '(' N COND N . ')' N T_CO N S T_CC T_NL

    ')'  shift, and go to state 124


State 114

   53 LOGICOP: T_AND .

    $default  reduce using rule 53 (LOGICOP)


State 115

   54 LOGICOP: T_OR .

    $default  reduce using rule 54 (LOGICOP)


State 116

   23 COND: K RELOP . K

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    K    go to state 125
    L    go to state 19
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 117

   25 COND: K LOGICOP . K

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    K    go to state 126
    L    go to state 19
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 118

   24 COND: ID ASSIGNOP . K

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    K    go to state 127
    L    go to state 19
    M    go to state 20
    O    go to state 21
    NUM  go to state 22
    ID   go to state 33


State 119

   14 IF: T_IF N '(' N COND N . ')' N T_CO NIF

    ')'  shift, and go to state 128


State 120

   12 REPEAT: T_REPEAT N T_CO N S T_CC . T_NL

    T_NL  shift, and go to state 129


State 121

    8 S: T_CO N S T_CC T_NL S .

    $default  reduce using rule 8 (S)


State 122

   61 PASTEIN: STR ',' PASTEIN .

    $default  reduce using rule 61 (PASTEIN)


State 123

   62 PASTEIN: ID ',' PASTEIN .

    $default  reduce using rule 62 (PASTEIN)


State 124

   11 WHILE: T_WHILE N '(' N COND N ')' . N T_CO N S T_CC T_NL

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 130


State 125

   23 COND: K RELOP K .
   27 K: K . T_ADD L
   28  | K . T_SUB L

    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42

    $default  reduce using rule 23 (COND)


State 126

   25 COND: K LOGICOP K .
   27 K: K . T_ADD L
   28  | K . T_SUB L

    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42

    $default  reduce using rule 25 (COND)


State 127

   24 COND: ID ASSIGNOP K .
   27 K: K . T_ADD L
   28  | K . T_SUB L

    T_ADD  shift, and go to state 41
    T_SUB  shift, and go to state 42

    $default  reduce using rule 24 (COND)


State 128

   14 IF: T_IF N '(' N COND N ')' . N T_CO NIF

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 131


State 129

   12 REPEAT: T_REPEAT N T_CO N S T_CC T_NL .

    $default  reduce using rule 12 (REPEAT)


State 130

   11 WHILE: T_WHILE N '(' N COND N ')' N . T_CO N S T_CC T_NL

    T_CO  shift, and go to state 132


State 131

   14 IF: T_IF N '(' N COND N ')' N . T_CO NIF

    T_CO  shift, and go to state 133


State 132

   11 WHILE: T_WHILE N '(' N COND N ')' N T_CO . N S T_CC T_NL

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 134


State 133

   14 IF: T_IF N '(' N COND N ')' N T_CO . NIF

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    NIF  go to state 135
    N    go to state 136


State 134

   11 WHILE: T_WHILE N '(' N COND N ')' N T_CO N . S T_CC T_NL

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    T_CC  reduce using rule 10 (S)

    S       go to state 137
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 135

   14 IF: T_IF N '(' N COND N ')' N T_CO NIF .

    $default  reduce using rule 14 (IF)


State 136

   15 NIF: N . S T_CC T_NL
   16    | N . S T_CC T_NL E

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    T_CC  reduce using rule 10 (S)

    S       go to state 138
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 137

   11 WHILE: T_WHILE N '(' N COND N ')' N T_CO N S . T_CC T_NL

    T_CC  shift, and go to state 139


State 138

   15 NIF: N S . T_CC T_NL
   16    | N S . T_CC T_NL E

    T_CC  shift, and go to state 140


State 139

   11 WHILE: T_WHILE N '(' N COND N ')' N T_CO N S T_CC . T_NL

    T_NL  shift, and go to state 141


State 140

   15 NIF: N S T_CC . T_NL
   16    | N S T_CC . T_NL E

    T_NL  shift, and go to state 142


State 141

   11 WHILE: T_WHILE N '(' N COND N ')' N T_CO N S T_CC T_NL .

    $default  reduce using rule 11 (WHILE)


State 142

   15 NIF: N S T_CC T_NL .
   16    | N S T_CC T_NL . E

    T_ELSE  shift, and go to state 143

    $default  reduce using rule 15 (NIF)

    E  go to state 144


State 143

   17 E: T_ELSE . N T_IF N '(' N COND N ')' N T_CO N S T_CC T_NL E
   19  | T_ELSE . N T_CO N S T_CC T_NL @1

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 145


State 144

   16 NIF: N S T_CC T_NL E .

    $default  reduce using rule 16 (NIF)


State 145

   17 E: T_ELSE N . T_IF N '(' N COND N ')' N T_CO N S T_CC T_NL E
   19  | T_ELSE N . T_CO N S T_CC T_NL @1

    T_IF  shift, and go to state 146
    T_CO  shift, and go to state 147


State 146

   17 E: T_ELSE N T_IF . N '(' N COND N ')' N T_CO N S T_CC T_NL E

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 148


State 147

   19 E: T_ELSE N T_CO . N S T_CC T_NL @1

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 149


State 148

   17 E: T_ELSE N T_IF N . '(' N COND N ')' N T_CO N S T_CC T_NL E

    '('  shift, and go to state 150


State 149

   19 E: T_ELSE N T_CO N . S T_CC T_NL @1

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    T_CC  reduce using rule 10 (S)

    S       go to state 151
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 150

   17 E: T_ELSE N T_IF N '(' . N COND N ')' N T_CO N S T_CC T_NL E

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 152


State 151

   19 E: T_ELSE N T_CO N S . T_CC T_NL @1

    T_CC  shift, and go to state 153


State 152

   17 E: T_ELSE N T_IF N '(' N . COND N ')' N T_CO N S T_CC T_NL E

    T_NUM  shift, and go to state 7
    T_ID   shift, and go to state 8
    '('    shift, and go to state 10

    COND  go to state 154
    K     go to state 102
    L     go to state 19
    M     go to state 20
    O     go to state 21
    NUM   go to state 22
    ID    go to state 103


State 153

   19 E: T_ELSE N T_CO N S T_CC . T_NL @1

    T_NL  shift, and go to state 155


State 154

   17 E: T_ELSE N T_IF N '(' N COND . N ')' N T_CO N S T_CC T_NL E

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 156


State 155

   19 E: T_ELSE N T_CO N S T_CC T_NL . @1

    $default  reduce using rule 18 (@1)

    @1  go to state 157


State 156

   17 E: T_ELSE N T_IF N '(' N COND N . ')' N T_CO N S T_CC T_NL E

    ')'  shift, and go to state 158


State 157

   19 E: T_ELSE N T_CO N S T_CC T_NL @1 .

    $default  reduce using rule 19 (E)


State 158

   17 E: T_ELSE N T_IF N '(' N COND N ')' . N T_CO N S T_CC T_NL E

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 159


State 159

   17 E: T_ELSE N T_IF N '(' N COND N ')' N . T_CO N S T_CC T_NL E

    T_CO  shift, and go to state 160


State 160

   17 E: T_ELSE N T_IF N '(' N COND N ')' N T_CO . N S T_CC T_NL E

    T_NL  shift, and go to state 26

    $default  reduce using rule 65 (N)

    N  go to state 161


State 161

   17 E: T_ELSE N T_IF N '(' N COND N ')' N T_CO N . S T_CC T_NL E

    error     shift, and go to state 1
    T_PRINT   shift, and go to state 2
    T_WHILE   shift, and go to state 3
    T_IF      shift, and go to state 4
    T_BREAK   shift, and go to state 5
    T_REPEAT  shift, and go to state 6
    T_NUM     shift, and go to state 7
    T_ID      shift, and go to state 8
    T_CO      shift, and go to state 9
    '('       shift, and go to state 10

    T_CC  reduce using rule 10 (S)

    S       go to state 162
    WHILE   go to state 13
    REPEAT  go to state 14
    BREAK   go to state 15
    IF      go to state 16
    EXP     go to state 17
    K       go to state 18
    L       go to state 19
    M       go to state 20
    O       go to state 21
    NUM     go to state 22
    ID      go to state 23


State 162

   17 E: T_ELSE N T_IF N '(' N COND N ')' N T_CO N S . T_CC T_NL E

    T_CC  shift, and go to state 163


State 163

   17 E: T_ELSE N T_IF N '(' N COND N ')' N T_CO N S T_CC . T_NL E

    T_NL  shift, and go to state 164


State 164

   17 E: T_ELSE N T_IF N '(' N COND N ')' N T_CO N S T_CC T_NL . E

    T_ELSE  shift, and go to state 143

    E  go to state 165


State 165

   17 E: T_ELSE N T_IF N '(' N COND N ')' N T_CO N S T_CC T_NL E .

    $default  reduce using rule 17 (E)
